# -*- coding: utf-8 -*-
"""
Created on Thu Sep  8 16:16:32 2-116

@author: Rasmus
"""

import numpy as np

def list_to_column_vector(lst):
    return np.reshape(np.array(lst), [len(lst), 1])


_pattern0_lst = [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
                -1,-1,-1,1,1,1,1,-1,-1,-1,
                -1,-1,1,1,1,1,1,1,-1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,1,1,1,-1,-1,1,1,1,-1,
                -1,-1,1,1,1,1,1,1,-1,-1,
                -1,-1,-1,1,1,1,1,-1,-1,-1,
                -1,-1,-1,-1,-1,-1,-1,-1,-1,-1]
                
_pattern1_lst = [-1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1,
               -1,-1,-1,1,1,1,1,-1,-1,-1]

_pattern2_lst = [1,1,1,1,1,1,1,1,-1,-1,
                 1,1,1,1,1,1,1,1,-1,-1,
                -1,-1,-1,-1,-1,1,1,1,-1,-1,
                -1,-1,-1,-1,-1,1,1,1,-1,-1,
                -1,-1,-1,-1,-1,1,1,1,-1,-1,
                -1,-1,-1,-1,-1,1,1,1,-1,-1,
                -1,-1,-1,-1,-1,1,1,1,-1,-1,
                 1,1,1,1,1,1,1,1,-1,-1,
                 1,1,1,1,1,1,1,1,-1,-1,
                 1,1,1,-1,-1,-1,-1,-1,-1,-1,
                 1,1,1,-1,-1,-1,-1,-1,-1,-1,
                 1,1,1,-1,-1,-1,-1,-1,-1,-1,
                 1,1,1,-1,-1,-1,-1,-1,-1,-1,
                 1,1,1,-1,-1,-1,-1,-1,-1,-1,
                 1,1,1,1,1,1,1,1,-1,-1,
                 1,1,1,1,1,1,1,1,-1,-1]

_pattern3_lst = [-1,-1,1,1,1,1,1,1,-1,-1,
                 -1,-1,1,1,1,1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,                 
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,1,1,1,1,-1,-1,
                 -1,-1,-1,-1,1,1,1,1,-1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,1,1,1,1,1,1,1,-1,
                 -1,-1,1,1,1,1,1,1,-1,-1]

_pattern4_lst = [-1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,-1,-1,-1,-1,1,1,-1,
                 -1,1,1,1,1,1,1,1,1,-1,
                 -1,1,1,1,1,1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,-1,1,1,-1]


_spurious_3 =[-1,-1,1,1,1,1,1,1,-1,-1,
                 -1,-1,1,1,1,1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,                 
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,1,1,1,1,1,-1,-1,
                 -1,-1,-1,1,1,1,1,1,-1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,-1,-1,-1,-1,1,1,1,-1,
                 -1,-1,1,1,1,1,1,1,1,-1,
                 -1,-1,1,1,1,1,1,1,-1,-1]

PATTERN_ZERO = list_to_column_vector(_pattern0_lst)
PATTERN_ONE = list_to_column_vector(_pattern1_lst)
PATTERN_TWO = list_to_column_vector(_pattern2_lst)
PATTERN_THREE = list_to_column_vector(_pattern3_lst)
PATTERN_FOUR = list_to_column_vector(_pattern4_lst)

ALL_PATTERNS = [PATTERN_ZERO, PATTERN_ONE, PATTERN_TWO, PATTERN_THREE, PATTERN_FOUR]

SPURIOUS_THREE = list_to_column_vector(_spurious_3)


def print_pattern(pattern):
    for i in range(0,16):
        row_string = ''
        for bit in pattern[10*i:10*(i+1)]:
            row_string += " " + str(bit)
        print (row_string)
    print(len(pattern))